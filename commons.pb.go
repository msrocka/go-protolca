// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: commons.proto

package protolca

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DataSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Model:
	//	*DataSet_Actor
	//	*DataSet_Category
	//	*DataSet_Currency
	//	*DataSet_DqSystem
	//	*DataSet_Flow
	//	*DataSet_FlowProperty
	//	*DataSet_ImpactCategory
	//	*DataSet_ImpactMethod
	//	*DataSet_Location
	//	*DataSet_Parameter
	//	*DataSet_Process
	//	*DataSet_ProductSystem
	//	*DataSet_Project
	//	*DataSet_SocialIndicator
	//	*DataSet_Source
	//	*DataSet_UnitGroup
	Model isDataSet_Model `protobuf_oneof:"model"`
}

func (x *DataSet) Reset() {
	*x = DataSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSet) ProtoMessage() {}

func (x *DataSet) ProtoReflect() protoreflect.Message {
	mi := &file_commons_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSet.ProtoReflect.Descriptor instead.
func (*DataSet) Descriptor() ([]byte, []int) {
	return file_commons_proto_rawDescGZIP(), []int{0}
}

func (m *DataSet) GetModel() isDataSet_Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (x *DataSet) GetActor() *Actor {
	if x, ok := x.GetModel().(*DataSet_Actor); ok {
		return x.Actor
	}
	return nil
}

func (x *DataSet) GetCategory() *Category {
	if x, ok := x.GetModel().(*DataSet_Category); ok {
		return x.Category
	}
	return nil
}

func (x *DataSet) GetCurrency() *Currency {
	if x, ok := x.GetModel().(*DataSet_Currency); ok {
		return x.Currency
	}
	return nil
}

func (x *DataSet) GetDqSystem() *DQSystem {
	if x, ok := x.GetModel().(*DataSet_DqSystem); ok {
		return x.DqSystem
	}
	return nil
}

func (x *DataSet) GetFlow() *Flow {
	if x, ok := x.GetModel().(*DataSet_Flow); ok {
		return x.Flow
	}
	return nil
}

func (x *DataSet) GetFlowProperty() *FlowProperty {
	if x, ok := x.GetModel().(*DataSet_FlowProperty); ok {
		return x.FlowProperty
	}
	return nil
}

func (x *DataSet) GetImpactCategory() *ImpactCategory {
	if x, ok := x.GetModel().(*DataSet_ImpactCategory); ok {
		return x.ImpactCategory
	}
	return nil
}

func (x *DataSet) GetImpactMethod() *ImpactMethod {
	if x, ok := x.GetModel().(*DataSet_ImpactMethod); ok {
		return x.ImpactMethod
	}
	return nil
}

func (x *DataSet) GetLocation() *Location {
	if x, ok := x.GetModel().(*DataSet_Location); ok {
		return x.Location
	}
	return nil
}

func (x *DataSet) GetParameter() *Parameter {
	if x, ok := x.GetModel().(*DataSet_Parameter); ok {
		return x.Parameter
	}
	return nil
}

func (x *DataSet) GetProcess() *Process {
	if x, ok := x.GetModel().(*DataSet_Process); ok {
		return x.Process
	}
	return nil
}

func (x *DataSet) GetProductSystem() *ProductSystem {
	if x, ok := x.GetModel().(*DataSet_ProductSystem); ok {
		return x.ProductSystem
	}
	return nil
}

func (x *DataSet) GetProject() *Project {
	if x, ok := x.GetModel().(*DataSet_Project); ok {
		return x.Project
	}
	return nil
}

func (x *DataSet) GetSocialIndicator() *SocialIndicator {
	if x, ok := x.GetModel().(*DataSet_SocialIndicator); ok {
		return x.SocialIndicator
	}
	return nil
}

func (x *DataSet) GetSource() *Source {
	if x, ok := x.GetModel().(*DataSet_Source); ok {
		return x.Source
	}
	return nil
}

func (x *DataSet) GetUnitGroup() *UnitGroup {
	if x, ok := x.GetModel().(*DataSet_UnitGroup); ok {
		return x.UnitGroup
	}
	return nil
}

type isDataSet_Model interface {
	isDataSet_Model()
}

type DataSet_Actor struct {
	Actor *Actor `protobuf:"bytes,1,opt,name=actor,proto3,oneof"`
}

type DataSet_Category struct {
	Category *Category `protobuf:"bytes,2,opt,name=category,proto3,oneof"`
}

type DataSet_Currency struct {
	Currency *Currency `protobuf:"bytes,3,opt,name=currency,proto3,oneof"`
}

type DataSet_DqSystem struct {
	DqSystem *DQSystem `protobuf:"bytes,4,opt,name=dq_system,json=dqSystem,proto3,oneof"`
}

type DataSet_Flow struct {
	Flow *Flow `protobuf:"bytes,5,opt,name=flow,proto3,oneof"`
}

type DataSet_FlowProperty struct {
	FlowProperty *FlowProperty `protobuf:"bytes,6,opt,name=flow_property,json=flowProperty,proto3,oneof"`
}

type DataSet_ImpactCategory struct {
	ImpactCategory *ImpactCategory `protobuf:"bytes,7,opt,name=impact_category,json=impactCategory,proto3,oneof"`
}

type DataSet_ImpactMethod struct {
	ImpactMethod *ImpactMethod `protobuf:"bytes,8,opt,name=impact_method,json=impactMethod,proto3,oneof"`
}

type DataSet_Location struct {
	Location *Location `protobuf:"bytes,9,opt,name=location,proto3,oneof"`
}

type DataSet_Parameter struct {
	Parameter *Parameter `protobuf:"bytes,10,opt,name=parameter,proto3,oneof"`
}

type DataSet_Process struct {
	Process *Process `protobuf:"bytes,11,opt,name=process,proto3,oneof"`
}

type DataSet_ProductSystem struct {
	ProductSystem *ProductSystem `protobuf:"bytes,12,opt,name=product_system,json=productSystem,proto3,oneof"`
}

type DataSet_Project struct {
	Project *Project `protobuf:"bytes,13,opt,name=project,proto3,oneof"`
}

type DataSet_SocialIndicator struct {
	SocialIndicator *SocialIndicator `protobuf:"bytes,14,opt,name=social_indicator,json=socialIndicator,proto3,oneof"`
}

type DataSet_Source struct {
	Source *Source `protobuf:"bytes,15,opt,name=source,proto3,oneof"`
}

type DataSet_UnitGroup struct {
	UnitGroup *UnitGroup `protobuf:"bytes,16,opt,name=unit_group,json=unitGroup,proto3,oneof"`
}

func (*DataSet_Actor) isDataSet_Model() {}

func (*DataSet_Category) isDataSet_Model() {}

func (*DataSet_Currency) isDataSet_Model() {}

func (*DataSet_DqSystem) isDataSet_Model() {}

func (*DataSet_Flow) isDataSet_Model() {}

func (*DataSet_FlowProperty) isDataSet_Model() {}

func (*DataSet_ImpactCategory) isDataSet_Model() {}

func (*DataSet_ImpactMethod) isDataSet_Model() {}

func (*DataSet_Location) isDataSet_Model() {}

func (*DataSet_Parameter) isDataSet_Model() {}

func (*DataSet_Process) isDataSet_Model() {}

func (*DataSet_ProductSystem) isDataSet_Model() {}

func (*DataSet_Project) isDataSet_Model() {}

func (*DataSet_SocialIndicator) isDataSet_Model() {}

func (*DataSet_Source) isDataSet_Model() {}

func (*DataSet_UnitGroup) isDataSet_Model() {}

var File_commons_proto protoreflect.FileDescriptor

var file_commons_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x0a, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec,
	0x06, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c,
	0x63, 0x61, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x48, 0x00, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x31, 0x0a, 0x09, 0x64, 0x71, 0x5f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x44, 0x51, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x08, 0x64, 0x71, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x04, 0x66, 0x6c,
	0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x6c, 0x63, 0x61, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77,
	0x12, 0x3d, 0x0a, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c,
	0x63, 0x61, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x48,
	0x00, 0x52, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12,
	0x43, 0x0a, 0x0f, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x6c, 0x63, 0x61, 0x2e, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x0d, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x6c, 0x63, 0x61, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x40, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x2d, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x48,
	0x00, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x46, 0x0a, 0x10, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e,
	0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x0f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x34,
	0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x55, 0x6e,
	0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x07, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x45, 0x0a,
	0x16, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6c, 0x63, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x42, 0x09, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0a, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61,
	0xaa, 0x02, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x43, 0x41, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_commons_proto_rawDescOnce sync.Once
	file_commons_proto_rawDescData = file_commons_proto_rawDesc
)

func file_commons_proto_rawDescGZIP() []byte {
	file_commons_proto_rawDescOnce.Do(func() {
		file_commons_proto_rawDescData = protoimpl.X.CompressGZIP(file_commons_proto_rawDescData)
	})
	return file_commons_proto_rawDescData
}

var file_commons_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_commons_proto_goTypes = []interface{}{
	(*DataSet)(nil),         // 0: protolca.services.DataSet
	(*Actor)(nil),           // 1: protolca.Actor
	(*Category)(nil),        // 2: protolca.Category
	(*Currency)(nil),        // 3: protolca.Currency
	(*DQSystem)(nil),        // 4: protolca.DQSystem
	(*Flow)(nil),            // 5: protolca.Flow
	(*FlowProperty)(nil),    // 6: protolca.FlowProperty
	(*ImpactCategory)(nil),  // 7: protolca.ImpactCategory
	(*ImpactMethod)(nil),    // 8: protolca.ImpactMethod
	(*Location)(nil),        // 9: protolca.Location
	(*Parameter)(nil),       // 10: protolca.Parameter
	(*Process)(nil),         // 11: protolca.Process
	(*ProductSystem)(nil),   // 12: protolca.ProductSystem
	(*Project)(nil),         // 13: protolca.Project
	(*SocialIndicator)(nil), // 14: protolca.SocialIndicator
	(*Source)(nil),          // 15: protolca.Source
	(*UnitGroup)(nil),       // 16: protolca.UnitGroup
}
var file_commons_proto_depIdxs = []int32{
	1,  // 0: protolca.services.DataSet.actor:type_name -> protolca.Actor
	2,  // 1: protolca.services.DataSet.category:type_name -> protolca.Category
	3,  // 2: protolca.services.DataSet.currency:type_name -> protolca.Currency
	4,  // 3: protolca.services.DataSet.dq_system:type_name -> protolca.DQSystem
	5,  // 4: protolca.services.DataSet.flow:type_name -> protolca.Flow
	6,  // 5: protolca.services.DataSet.flow_property:type_name -> protolca.FlowProperty
	7,  // 6: protolca.services.DataSet.impact_category:type_name -> protolca.ImpactCategory
	8,  // 7: protolca.services.DataSet.impact_method:type_name -> protolca.ImpactMethod
	9,  // 8: protolca.services.DataSet.location:type_name -> protolca.Location
	10, // 9: protolca.services.DataSet.parameter:type_name -> protolca.Parameter
	11, // 10: protolca.services.DataSet.process:type_name -> protolca.Process
	12, // 11: protolca.services.DataSet.product_system:type_name -> protolca.ProductSystem
	13, // 12: protolca.services.DataSet.project:type_name -> protolca.Project
	14, // 13: protolca.services.DataSet.social_indicator:type_name -> protolca.SocialIndicator
	15, // 14: protolca.services.DataSet.source:type_name -> protolca.Source
	16, // 15: protolca.services.DataSet.unit_group:type_name -> protolca.UnitGroup
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_commons_proto_init() }
func file_commons_proto_init() {
	if File_commons_proto != nil {
		return
	}
	file_olca_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_commons_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_commons_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*DataSet_Actor)(nil),
		(*DataSet_Category)(nil),
		(*DataSet_Currency)(nil),
		(*DataSet_DqSystem)(nil),
		(*DataSet_Flow)(nil),
		(*DataSet_FlowProperty)(nil),
		(*DataSet_ImpactCategory)(nil),
		(*DataSet_ImpactMethod)(nil),
		(*DataSet_Location)(nil),
		(*DataSet_Parameter)(nil),
		(*DataSet_Process)(nil),
		(*DataSet_ProductSystem)(nil),
		(*DataSet_Project)(nil),
		(*DataSet_SocialIndicator)(nil),
		(*DataSet_Source)(nil),
		(*DataSet_UnitGroup)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_commons_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_commons_proto_goTypes,
		DependencyIndexes: file_commons_proto_depIdxs,
		MessageInfos:      file_commons_proto_msgTypes,
	}.Build()
	File_commons_proto = out.File
	file_commons_proto_rawDesc = nil
	file_commons_proto_goTypes = nil
	file_commons_proto_depIdxs = nil
}
