// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: result_types.proto

package protolca

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// A technosphere flow of a product system. Such a flow is identified by a pair
// of a process and a flow where the flow can be a product or waste flow.  For
// products flows, the process is a process that produces this product; thus,
// has it on the output side. For waste flows, the process is a process that
// consumes this waste flow; thus, has it on the input side.  In a product
// system, there can be multiple tech-flows with the same product or waste flow
// but different processes, e.g. when there are multiple processes that produce
// the same product.
type TechFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process *Ref `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
	// Types that are assignable to Flow:
	//	*TechFlow_Product
	//	*TechFlow_Waste
	Flow isTechFlow_Flow `protobuf_oneof:"flow"`
}

func (x *TechFlow) Reset() {
	*x = TechFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_result_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TechFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechFlow) ProtoMessage() {}

func (x *TechFlow) ProtoReflect() protoreflect.Message {
	mi := &file_result_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechFlow.ProtoReflect.Descriptor instead.
func (*TechFlow) Descriptor() ([]byte, []int) {
	return file_result_types_proto_rawDescGZIP(), []int{0}
}

func (x *TechFlow) GetProcess() *Ref {
	if x != nil {
		return x.Process
	}
	return nil
}

func (m *TechFlow) GetFlow() isTechFlow_Flow {
	if m != nil {
		return m.Flow
	}
	return nil
}

func (x *TechFlow) GetProduct() *Ref {
	if x, ok := x.GetFlow().(*TechFlow_Product); ok {
		return x.Product
	}
	return nil
}

func (x *TechFlow) GetWaste() *Ref {
	if x, ok := x.GetFlow().(*TechFlow_Waste); ok {
		return x.Waste
	}
	return nil
}

type isTechFlow_Flow interface {
	isTechFlow_Flow()
}

type TechFlow_Product struct {
	Product *Ref `protobuf:"bytes,2,opt,name=product,proto3,oneof"`
}

type TechFlow_Waste struct {
	Waste *Ref `protobuf:"bytes,3,opt,name=waste,proto3,oneof"`
}

func (*TechFlow_Product) isTechFlow_Flow() {}

func (*TechFlow_Waste) isTechFlow_Flow() {}

type EnviFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flow     *Ref `protobuf:"bytes,1,opt,name=flow,proto3" json:"flow,omitempty"`
	Location *Ref `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	IsInput  bool `protobuf:"varint,3,opt,name=is_input,json=isInput,proto3" json:"is_input,omitempty"`
}

func (x *EnviFlow) Reset() {
	*x = EnviFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_result_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnviFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnviFlow) ProtoMessage() {}

func (x *EnviFlow) ProtoReflect() protoreflect.Message {
	mi := &file_result_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnviFlow.ProtoReflect.Descriptor instead.
func (*EnviFlow) Descriptor() ([]byte, []int) {
	return file_result_types_proto_rawDescGZIP(), []int{1}
}

func (x *EnviFlow) GetFlow() *Ref {
	if x != nil {
		return x.Flow
	}
	return nil
}

func (x *EnviFlow) GetLocation() *Ref {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *EnviFlow) GetIsInput() bool {
	if x != nil {
		return x.IsInput
	}
	return false
}

type ResultValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	// Types that are assignable to ResultReference:
	//	*ResultValue_TechFlow
	//	*ResultValue_EnviFlow
	//	*ResultValue_Impact
	//	*ResultValue_Costs
	ResultReference isResultValue_ResultReference `protobuf_oneof:"result_reference"`
}

func (x *ResultValue) Reset() {
	*x = ResultValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_result_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultValue) ProtoMessage() {}

func (x *ResultValue) ProtoReflect() protoreflect.Message {
	mi := &file_result_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultValue.ProtoReflect.Descriptor instead.
func (*ResultValue) Descriptor() ([]byte, []int) {
	return file_result_types_proto_rawDescGZIP(), []int{2}
}

func (x *ResultValue) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (m *ResultValue) GetResultReference() isResultValue_ResultReference {
	if m != nil {
		return m.ResultReference
	}
	return nil
}

func (x *ResultValue) GetTechFlow() *TechFlow {
	if x, ok := x.GetResultReference().(*ResultValue_TechFlow); ok {
		return x.TechFlow
	}
	return nil
}

func (x *ResultValue) GetEnviFlow() *EnviFlow {
	if x, ok := x.GetResultReference().(*ResultValue_EnviFlow); ok {
		return x.EnviFlow
	}
	return nil
}

func (x *ResultValue) GetImpact() *Ref {
	if x, ok := x.GetResultReference().(*ResultValue_Impact); ok {
		return x.Impact
	}
	return nil
}

func (x *ResultValue) GetCosts() bool {
	if x, ok := x.GetResultReference().(*ResultValue_Costs); ok {
		return x.Costs
	}
	return false
}

type isResultValue_ResultReference interface {
	isResultValue_ResultReference()
}

type ResultValue_TechFlow struct {
	TechFlow *TechFlow `protobuf:"bytes,2,opt,name=tech_flow,json=techFlow,proto3,oneof"`
}

type ResultValue_EnviFlow struct {
	EnviFlow *EnviFlow `protobuf:"bytes,3,opt,name=envi_flow,json=enviFlow,proto3,oneof"`
}

type ResultValue_Impact struct {
	Impact *Ref `protobuf:"bytes,4,opt,name=impact,proto3,oneof"`
}

type ResultValue_Costs struct {
	Costs bool `protobuf:"varint,5,opt,name=costs,proto3,oneof"`
}

func (*ResultValue_TechFlow) isResultValue_ResultReference() {}

func (*ResultValue_EnviFlow) isResultValue_ResultReference() {}

func (*ResultValue_Impact) isResultValue_ResultReference() {}

func (*ResultValue_Costs) isResultValue_ResultReference() {}

var File_result_types_proto protoreflect.FileDescriptor

var file_result_types_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x0a, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x54, 0x65, 0x63, 0x68, 0x46, 0x6c, 0x6f, 0x77,
	0x12, 0x27, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x52, 0x65, 0x66,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x77, 0x61, 0x73, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x52,
	0x65, 0x66, 0x48, 0x00, 0x52, 0x05, 0x77, 0x61, 0x73, 0x74, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x66,
	0x6c, 0x6f, 0x77, 0x22, 0x73, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x69, 0x46, 0x6c, 0x6f, 0x77, 0x12,
	0x21, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x52, 0x65, 0x66, 0x52, 0x04, 0x66, 0x6c,
	0x6f, 0x77, 0x12, 0x29, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e,
	0x52, 0x65, 0x66, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0xf0, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a,
	0x0a, 0x09, 0x74, 0x65, 0x63, 0x68, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x00,
	0x52, 0x08, 0x74, 0x65, 0x63, 0x68, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x3a, 0x0a, 0x09, 0x65, 0x6e,
	0x76, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x08, 0x65, 0x6e,
	0x76, 0x69, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x27, 0x0a, 0x06, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63,
	0x61, 0x2e, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x12,
	0x16, 0x0a, 0x05, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x05, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x48, 0x0a, 0x16, 0x6f,
	0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6c, 0x63, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x42, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x00, 0x5a, 0x0a, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x63,
	0x61, 0xaa, 0x02, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x43, 0x41, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_result_types_proto_rawDescOnce sync.Once
	file_result_types_proto_rawDescData = file_result_types_proto_rawDesc
)

func file_result_types_proto_rawDescGZIP() []byte {
	file_result_types_proto_rawDescOnce.Do(func() {
		file_result_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_result_types_proto_rawDescData)
	})
	return file_result_types_proto_rawDescData
}

var file_result_types_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_result_types_proto_goTypes = []interface{}{
	(*TechFlow)(nil),    // 0: protolca.services.TechFlow
	(*EnviFlow)(nil),    // 1: protolca.services.EnviFlow
	(*ResultValue)(nil), // 2: protolca.services.ResultValue
	(*Ref)(nil),         // 3: protolca.Ref
}
var file_result_types_proto_depIdxs = []int32{
	3, // 0: protolca.services.TechFlow.process:type_name -> protolca.Ref
	3, // 1: protolca.services.TechFlow.product:type_name -> protolca.Ref
	3, // 2: protolca.services.TechFlow.waste:type_name -> protolca.Ref
	3, // 3: protolca.services.EnviFlow.flow:type_name -> protolca.Ref
	3, // 4: protolca.services.EnviFlow.location:type_name -> protolca.Ref
	0, // 5: protolca.services.ResultValue.tech_flow:type_name -> protolca.services.TechFlow
	1, // 6: protolca.services.ResultValue.envi_flow:type_name -> protolca.services.EnviFlow
	3, // 7: protolca.services.ResultValue.impact:type_name -> protolca.Ref
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_result_types_proto_init() }
func file_result_types_proto_init() {
	if File_result_types_proto != nil {
		return
	}
	file_olca_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_result_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TechFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_result_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnviFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_result_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_result_types_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*TechFlow_Product)(nil),
		(*TechFlow_Waste)(nil),
	}
	file_result_types_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ResultValue_TechFlow)(nil),
		(*ResultValue_EnviFlow)(nil),
		(*ResultValue_Impact)(nil),
		(*ResultValue_Costs)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_result_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_result_types_proto_goTypes,
		DependencyIndexes: file_result_types_proto_depIdxs,
		MessageInfos:      file_result_types_proto_msgTypes,
	}.Build()
	File_result_types_proto = out.File
	file_result_types_proto_rawDesc = nil
	file_result_types_proto_goTypes = nil
	file_result_types_proto_depIdxs = nil
}
